// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: api/codesurgeon.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetChatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatId string `protobuf:"bytes,1,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
}

func (x *GetChatRequest) Reset() {
	*x = GetChatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_codesurgeon_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChatRequest) ProtoMessage() {}

func (x *GetChatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_codesurgeon_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChatRequest.ProtoReflect.Descriptor instead.
func (*GetChatRequest) Descriptor() ([]byte, []int) {
	return file_api_codesurgeon_proto_rawDescGZIP(), []int{0}
}

func (x *GetChatRequest) GetChatId() string {
	if x != nil {
		return x.ChatId
	}
	return ""
}

type GetChatResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chat *Chat `protobuf:"bytes,1,opt,name=chat,proto3" json:"chat,omitempty"`
}

func (x *GetChatResponse) Reset() {
	*x = GetChatResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_codesurgeon_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChatResponse) ProtoMessage() {}

func (x *GetChatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_codesurgeon_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChatResponse.ProtoReflect.Descriptor instead.
func (*GetChatResponse) Descriptor() ([]byte, []int) {
	return file_api_codesurgeon_proto_rawDescGZIP(), []int{1}
}

func (x *GetChatResponse) GetChat() *Chat {
	if x != nil {
		return x.Chat
	}
	return nil
}

type NewChatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExternalId string `protobuf:"bytes,1,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"`
}

func (x *NewChatRequest) Reset() {
	*x = NewChatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_codesurgeon_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewChatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewChatRequest) ProtoMessage() {}

func (x *NewChatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_codesurgeon_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewChatRequest.ProtoReflect.Descriptor instead.
func (*NewChatRequest) Descriptor() ([]byte, []int) {
	return file_api_codesurgeon_proto_rawDescGZIP(), []int{2}
}

func (x *NewChatRequest) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

type NewChatResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chat *Chat `protobuf:"bytes,1,opt,name=chat,proto3" json:"chat,omitempty"`
}

func (x *NewChatResponse) Reset() {
	*x = NewChatResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_codesurgeon_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewChatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewChatResponse) ProtoMessage() {}

func (x *NewChatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_codesurgeon_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewChatResponse.ProtoReflect.Descriptor instead.
func (*NewChatResponse) Descriptor() ([]byte, []int) {
	return file_api_codesurgeon_proto_rawDescGZIP(), []int{3}
}

func (x *NewChatResponse) GetChat() *Chat {
	if x != nil {
		return x.Chat
	}
	return nil
}

type Chat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CurrentMode *Mode        `protobuf:"bytes,2,opt,name=current_mode,json=currentMode,proto3" json:"current_mode,omitempty"`
	ModeState   []*ModeState `protobuf:"bytes,3,rep,name=mode_state,json=modeState,proto3" json:"mode_state,omitempty"`
	Messages    []*Message   `protobuf:"bytes,4,rep,name=messages,proto3" json:"messages,omitempty"`
}

func (x *Chat) Reset() {
	*x = Chat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_codesurgeon_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Chat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chat) ProtoMessage() {}

func (x *Chat) ProtoReflect() protoreflect.Message {
	mi := &file_api_codesurgeon_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Chat.ProtoReflect.Descriptor instead.
func (*Chat) Descriptor() ([]byte, []int) {
	return file_api_codesurgeon_proto_rawDescGZIP(), []int{4}
}

func (x *Chat) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Chat) GetCurrentMode() *Mode {
	if x != nil {
		return x.CurrentMode
	}
	return nil
}

func (x *Chat) GetModeState() []*ModeState {
	if x != nil {
		return x.ModeState
	}
	return nil
}

func (x *Chat) GetMessages() []*Message {
	if x != nil {
		return x.Messages
	}
	return nil
}

type ModeState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModeName string `protobuf:"bytes,1,opt,name=mode_name,json=modeName,proto3" json:"mode_name,omitempty"`
	Key      string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Value    string `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ModeState) Reset() {
	*x = ModeState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_codesurgeon_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModeState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModeState) ProtoMessage() {}

func (x *ModeState) ProtoReflect() protoreflect.Message {
	mi := &file_api_codesurgeon_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModeState.ProtoReflect.Descriptor instead.
func (*ModeState) Descriptor() ([]byte, []int) {
	return file_api_codesurgeon_proto_rawDescGZIP(), []int{5}
}

func (x *ModeState) GetModeName() string {
	if x != nil {
		return x.ModeName
	}
	return ""
}

func (x *ModeState) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ModeState) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type SendMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatId  string   `protobuf:"bytes,1,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	Message *Message `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *SendMessageRequest) Reset() {
	*x = SendMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_codesurgeon_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageRequest) ProtoMessage() {}

func (x *SendMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_codesurgeon_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageRequest.ProtoReflect.Descriptor instead.
func (*SendMessageRequest) Descriptor() ([]byte, []int) {
	return file_api_codesurgeon_proto_rawDescGZIP(), []int{6}
}

func (x *SendMessageRequest) GetChatId() string {
	if x != nil {
		return x.ChatId
	}
	return ""
}

func (x *SendMessageRequest) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

type SendMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatId  string   `protobuf:"bytes,1,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	Command *Command `protobuf:"bytes,2,opt,name=command,proto3" json:"command,omitempty"`
	Message *Message `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Mode    *Mode    `protobuf:"bytes,4,opt,name=mode,proto3" json:"mode,omitempty"` // mode if any
}

func (x *SendMessageResponse) Reset() {
	*x = SendMessageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_codesurgeon_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageResponse) ProtoMessage() {}

func (x *SendMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_codesurgeon_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageResponse.ProtoReflect.Descriptor instead.
func (*SendMessageResponse) Descriptor() ([]byte, []int) {
	return file_api_codesurgeon_proto_rawDescGZIP(), []int{7}
}

func (x *SendMessageResponse) GetChatId() string {
	if x != nil {
		return x.ChatId
	}
	return ""
}

func (x *SendMessageResponse) GetCommand() *Command {
	if x != nil {
		return x.Command
	}
	return nil
}

func (x *SendMessageResponse) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *SendMessageResponse) GetMode() *Mode {
	if x != nil {
		return x.Mode
	}
	return nil
}

type Mode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Mode) Reset() {
	*x = Mode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_codesurgeon_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Mode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mode) ProtoMessage() {}

func (x *Mode) ProtoReflect() protoreflect.Message {
	mi := &file_api_codesurgeon_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mode.ProtoReflect.Descriptor instead.
func (*Mode) Descriptor() ([]byte, []int) {
	return file_api_codesurgeon_proto_rawDescGZIP(), []int{8}
}

func (x *Mode) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Command struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Command) Reset() {
	*x = Command{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_codesurgeon_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Command) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command) ProtoMessage() {}

func (x *Command) ProtoReflect() protoreflect.Message {
	mi := &file_api_codesurgeon_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command.ProtoReflect.Descriptor instead.
func (*Command) Descriptor() ([]byte, []int) {
	return file_api_codesurgeon_proto_rawDescGZIP(), []int{9}
}

func (x *Command) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text   string       `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	Form   *FormMessage `protobuf:"bytes,3,opt,name=form,proto3" json:"form,omitempty"`
	Sender string       `protobuf:"bytes,4,opt,name=sender,proto3" json:"sender,omitempty"` // user or ai or mode
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_codesurgeon_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_api_codesurgeon_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_api_codesurgeon_proto_rawDescGZIP(), []int{10}
}

func (x *Message) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Message) GetForm() *FormMessage {
	if x != nil {
		return x.Form
	}
	return nil
}

func (x *Message) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

type FormMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Questions []*QuestionAnswer `protobuf:"bytes,1,rep,name=questions,proto3" json:"questions,omitempty"`
}

func (x *FormMessage) Reset() {
	*x = FormMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_codesurgeon_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FormMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FormMessage) ProtoMessage() {}

func (x *FormMessage) ProtoReflect() protoreflect.Message {
	mi := &file_api_codesurgeon_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FormMessage.ProtoReflect.Descriptor instead.
func (*FormMessage) Descriptor() ([]byte, []int) {
	return file_api_codesurgeon_proto_rawDescGZIP(), []int{11}
}

func (x *FormMessage) GetQuestions() []*QuestionAnswer {
	if x != nil {
		return x.Questions
	}
	return nil
}

type QuestionAnswer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Question string `protobuf:"bytes,1,opt,name=question,proto3" json:"question,omitempty"`
	Answer   string `protobuf:"bytes,2,opt,name=answer,proto3" json:"answer,omitempty"`
}

func (x *QuestionAnswer) Reset() {
	*x = QuestionAnswer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_codesurgeon_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuestionAnswer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionAnswer) ProtoMessage() {}

func (x *QuestionAnswer) ProtoReflect() protoreflect.Message {
	mi := &file_api_codesurgeon_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionAnswer.ProtoReflect.Descriptor instead.
func (*QuestionAnswer) Descriptor() ([]byte, []int) {
	return file_api_codesurgeon_proto_rawDescGZIP(), []int{12}
}

func (x *QuestionAnswer) GetQuestion() string {
	if x != nil {
		return x.Question
	}
	return ""
}

func (x *QuestionAnswer) GetAnswer() string {
	if x != nil {
		return x.Answer
	}
	return ""
}

type GetOpenAPIRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetOpenAPIRequest) Reset() {
	*x = GetOpenAPIRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_codesurgeon_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOpenAPIRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOpenAPIRequest) ProtoMessage() {}

func (x *GetOpenAPIRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_codesurgeon_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOpenAPIRequest.ProtoReflect.Descriptor instead.
func (*GetOpenAPIRequest) Descriptor() ([]byte, []int) {
	return file_api_codesurgeon_proto_rawDescGZIP(), []int{13}
}

type GetOpenAPIResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Openapi string `protobuf:"bytes,1,opt,name=openapi,proto3" json:"openapi,omitempty"`
}

func (x *GetOpenAPIResponse) Reset() {
	*x = GetOpenAPIResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_codesurgeon_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOpenAPIResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOpenAPIResponse) ProtoMessage() {}

func (x *GetOpenAPIResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_codesurgeon_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOpenAPIResponse.ProtoReflect.Descriptor instead.
func (*GetOpenAPIResponse) Descriptor() ([]byte, []int) {
	return file_api_codesurgeon_proto_rawDescGZIP(), []int{14}
}

func (x *GetOpenAPIResponse) GetOpenapi() string {
	if x != nil {
		return x.Openapi
	}
	return ""
}

type ReceiveSlackMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token     string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Challenge string `protobuf:"bytes,2,opt,name=challenge,proto3" json:"challenge,omitempty"`
	Type      string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *ReceiveSlackMessageRequest) Reset() {
	*x = ReceiveSlackMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_codesurgeon_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceiveSlackMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiveSlackMessageRequest) ProtoMessage() {}

func (x *ReceiveSlackMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_codesurgeon_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiveSlackMessageRequest.ProtoReflect.Descriptor instead.
func (*ReceiveSlackMessageRequest) Descriptor() ([]byte, []int) {
	return file_api_codesurgeon_proto_rawDescGZIP(), []int{15}
}

func (x *ReceiveSlackMessageRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *ReceiveSlackMessageRequest) GetChallenge() string {
	if x != nil {
		return x.Challenge
	}
	return ""
}

func (x *ReceiveSlackMessageRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type ReceiveSlackMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Challenge string `protobuf:"bytes,1,opt,name=challenge,proto3" json:"challenge,omitempty"`
}

func (x *ReceiveSlackMessageResponse) Reset() {
	*x = ReceiveSlackMessageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_codesurgeon_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceiveSlackMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiveSlackMessageResponse) ProtoMessage() {}

func (x *ReceiveSlackMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_codesurgeon_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiveSlackMessageResponse.ProtoReflect.Descriptor instead.
func (*ReceiveSlackMessageResponse) Descriptor() ([]byte, []int) {
	return file_api_codesurgeon_proto_rawDescGZIP(), []int{16}
}

func (x *ReceiveSlackMessageResponse) GetChallenge() string {
	if x != nil {
		return x.Challenge
	}
	return ""
}

var File_api_codesurgeon_proto protoreflect.FileDescriptor

var file_api_codesurgeon_proto_rawDesc = []byte{
	0x0a, 0x15, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x75, 0x72, 0x67, 0x65, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x75, 0x72,
	0x67, 0x65, 0x6f, 0x6e, 0x22, 0x29, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x68, 0x61, 0x74, 0x49, 0x64, 0x22,
	0x38, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x25, 0x0a, 0x04, 0x63, 0x68, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x75, 0x72, 0x67, 0x65, 0x6f, 0x6e, 0x2e, 0x43,
	0x68, 0x61, 0x74, 0x52, 0x04, 0x63, 0x68, 0x61, 0x74, 0x22, 0x31, 0x0a, 0x0e, 0x4e, 0x65, 0x77,
	0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x65,
	0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x22, 0x38, 0x0a, 0x0f,
	0x4e, 0x65, 0x77, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x25, 0x0a, 0x04, 0x63, 0x68, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x63, 0x6f, 0x64, 0x65, 0x73, 0x75, 0x72, 0x67, 0x65, 0x6f, 0x6e, 0x2e, 0x43, 0x68, 0x61, 0x74,
	0x52, 0x04, 0x63, 0x68, 0x61, 0x74, 0x22, 0xb5, 0x01, 0x0a, 0x04, 0x43, 0x68, 0x61, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x34, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x75, 0x72, 0x67,
	0x65, 0x6f, 0x6e, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x35, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x65, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x64, 0x65,
	0x73, 0x75, 0x72, 0x67, 0x65, 0x6f, 0x6e, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x30, 0x0a, 0x08,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x75, 0x72, 0x67, 0x65, 0x6f, 0x6e, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x22, 0x50,
	0x0a, 0x09, 0x4d, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d,
	0x6f, 0x64, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6d, 0x6f, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x5d, 0x0a, 0x12, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x68, 0x61, 0x74, 0x49, 0x64, 0x12,
	0x2e, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x75, 0x72, 0x67, 0x65, 0x6f, 0x6e, 0x2e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0xb5, 0x01, 0x0a, 0x13, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x68, 0x61, 0x74, 0x49, 0x64,
	0x12, 0x2e, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x75, 0x72, 0x67, 0x65, 0x6f, 0x6e, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x12, 0x2e, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x75, 0x72, 0x67, 0x65, 0x6f, 0x6e, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x25, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x75, 0x72, 0x67, 0x65, 0x6f, 0x6e, 0x2e, 0x4d, 0x6f, 0x64,
	0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x22, 0x1a, 0x0a, 0x04, 0x4d, 0x6f, 0x64, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x1d, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0x63, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78,
	0x74, 0x12, 0x2c, 0x0a, 0x04, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x75, 0x72, 0x67, 0x65, 0x6f, 0x6e, 0x2e, 0x46, 0x6f,
	0x72, 0x6d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x04, 0x66, 0x6f, 0x72, 0x6d, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x22, 0x48, 0x0a, 0x0b, 0x46, 0x6f, 0x72, 0x6d, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x39, 0x0a, 0x09, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x6f, 0x64, 0x65,
	0x73, 0x75, 0x72, 0x67, 0x65, 0x6f, 0x6e, 0x2e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x52, 0x09, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x22, 0x44, 0x0a, 0x0e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6e, 0x73,
	0x77, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x22, 0x13, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4f, 0x70,
	0x65, 0x6e, 0x41, 0x50, 0x49, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x2e, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x50, 0x49, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x22, 0x64, 0x0a, 0x1a,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x53, 0x6c, 0x61, 0x63, 0x6b, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x22, 0x3b, 0x0a, 0x1b, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x53, 0x6c, 0x61,
	0x63, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x32,
	0xa3, 0x03, 0x0a, 0x0a, 0x47, 0x70, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4d,
	0x0a, 0x0a, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x50, 0x49, 0x12, 0x1e, 0x2e, 0x63,
	0x6f, 0x64, 0x65, 0x73, 0x75, 0x72, 0x67, 0x65, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x70,
	0x65, 0x6e, 0x41, 0x50, 0x49, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x63,
	0x6f, 0x64, 0x65, 0x73, 0x75, 0x72, 0x67, 0x65, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x70,
	0x65, 0x6e, 0x41, 0x50, 0x49, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a,
	0x07, 0x4e, 0x65, 0x77, 0x43, 0x68, 0x61, 0x74, 0x12, 0x1b, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x73,
	0x75, 0x72, 0x67, 0x65, 0x6f, 0x6e, 0x2e, 0x4e, 0x65, 0x77, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x75, 0x72, 0x67,
	0x65, 0x6f, 0x6e, 0x2e, 0x4e, 0x65, 0x77, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x12, 0x1b,
	0x2e, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x75, 0x72, 0x67, 0x65, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x63, 0x6f,
	0x64, 0x65, 0x73, 0x75, 0x72, 0x67, 0x65, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x0b, 0x53, 0x65, 0x6e,
	0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x73,
	0x75, 0x72, 0x67, 0x65, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x63, 0x6f, 0x64, 0x65,
	0x73, 0x75, 0x72, 0x67, 0x65, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x68, 0x0a, 0x13, 0x52,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x53, 0x6c, 0x61, 0x63, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x27, 0x2e, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x75, 0x72, 0x67, 0x65, 0x6f, 0x6e,
	0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x53, 0x6c, 0x61, 0x63, 0x6b, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x63, 0x6f,
	0x64, 0x65, 0x73, 0x75, 0x72, 0x67, 0x65, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x53, 0x6c, 0x61, 0x63, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x95, 0x01, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f,
	0x64, 0x65, 0x73, 0x75, 0x72, 0x67, 0x65, 0x6f, 0x6e, 0x42, 0x10, 0x43, 0x6f, 0x64, 0x65, 0x73,
	0x75, 0x72, 0x67, 0x65, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x24, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x77, 0x72, 0x69, 0x63, 0x61, 0x72,
	0x64, 0x6f, 0x2f, 0x63, 0x6f, 0x64, 0x65, 0x2d, 0x73, 0x75, 0x72, 0x67, 0x65, 0x6f, 0x6e, 0x2f,
	0x61, 0x70, 0x69, 0xa2, 0x02, 0x03, 0x43, 0x58, 0x58, 0xaa, 0x02, 0x0b, 0x43, 0x6f, 0x64, 0x65,
	0x73, 0x75, 0x72, 0x67, 0x65, 0x6f, 0x6e, 0xca, 0x02, 0x0b, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x75,
	0x72, 0x67, 0x65, 0x6f, 0x6e, 0xe2, 0x02, 0x17, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x75, 0x72, 0x67,
	0x65, 0x6f, 0x6e, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea,
	0x02, 0x0b, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x75, 0x72, 0x67, 0x65, 0x6f, 0x6e, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_codesurgeon_proto_rawDescOnce sync.Once
	file_api_codesurgeon_proto_rawDescData = file_api_codesurgeon_proto_rawDesc
)

func file_api_codesurgeon_proto_rawDescGZIP() []byte {
	file_api_codesurgeon_proto_rawDescOnce.Do(func() {
		file_api_codesurgeon_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_codesurgeon_proto_rawDescData)
	})
	return file_api_codesurgeon_proto_rawDescData
}

var file_api_codesurgeon_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_api_codesurgeon_proto_goTypes = []any{
	(*GetChatRequest)(nil),              // 0: codesurgeon.GetChatRequest
	(*GetChatResponse)(nil),             // 1: codesurgeon.GetChatResponse
	(*NewChatRequest)(nil),              // 2: codesurgeon.NewChatRequest
	(*NewChatResponse)(nil),             // 3: codesurgeon.NewChatResponse
	(*Chat)(nil),                        // 4: codesurgeon.Chat
	(*ModeState)(nil),                   // 5: codesurgeon.ModeState
	(*SendMessageRequest)(nil),          // 6: codesurgeon.SendMessageRequest
	(*SendMessageResponse)(nil),         // 7: codesurgeon.SendMessageResponse
	(*Mode)(nil),                        // 8: codesurgeon.Mode
	(*Command)(nil),                     // 9: codesurgeon.Command
	(*Message)(nil),                     // 10: codesurgeon.Message
	(*FormMessage)(nil),                 // 11: codesurgeon.FormMessage
	(*QuestionAnswer)(nil),              // 12: codesurgeon.QuestionAnswer
	(*GetOpenAPIRequest)(nil),           // 13: codesurgeon.GetOpenAPIRequest
	(*GetOpenAPIResponse)(nil),          // 14: codesurgeon.GetOpenAPIResponse
	(*ReceiveSlackMessageRequest)(nil),  // 15: codesurgeon.ReceiveSlackMessageRequest
	(*ReceiveSlackMessageResponse)(nil), // 16: codesurgeon.ReceiveSlackMessageResponse
}
var file_api_codesurgeon_proto_depIdxs = []int32{
	4,  // 0: codesurgeon.GetChatResponse.chat:type_name -> codesurgeon.Chat
	4,  // 1: codesurgeon.NewChatResponse.chat:type_name -> codesurgeon.Chat
	8,  // 2: codesurgeon.Chat.current_mode:type_name -> codesurgeon.Mode
	5,  // 3: codesurgeon.Chat.mode_state:type_name -> codesurgeon.ModeState
	10, // 4: codesurgeon.Chat.messages:type_name -> codesurgeon.Message
	10, // 5: codesurgeon.SendMessageRequest.message:type_name -> codesurgeon.Message
	9,  // 6: codesurgeon.SendMessageResponse.command:type_name -> codesurgeon.Command
	10, // 7: codesurgeon.SendMessageResponse.message:type_name -> codesurgeon.Message
	8,  // 8: codesurgeon.SendMessageResponse.mode:type_name -> codesurgeon.Mode
	11, // 9: codesurgeon.Message.form:type_name -> codesurgeon.FormMessage
	12, // 10: codesurgeon.FormMessage.questions:type_name -> codesurgeon.QuestionAnswer
	13, // 11: codesurgeon.GptService.GetOpenAPI:input_type -> codesurgeon.GetOpenAPIRequest
	2,  // 12: codesurgeon.GptService.NewChat:input_type -> codesurgeon.NewChatRequest
	0,  // 13: codesurgeon.GptService.GetChat:input_type -> codesurgeon.GetChatRequest
	6,  // 14: codesurgeon.GptService.SendMessage:input_type -> codesurgeon.SendMessageRequest
	15, // 15: codesurgeon.GptService.ReceiveSlackMessage:input_type -> codesurgeon.ReceiveSlackMessageRequest
	14, // 16: codesurgeon.GptService.GetOpenAPI:output_type -> codesurgeon.GetOpenAPIResponse
	3,  // 17: codesurgeon.GptService.NewChat:output_type -> codesurgeon.NewChatResponse
	1,  // 18: codesurgeon.GptService.GetChat:output_type -> codesurgeon.GetChatResponse
	7,  // 19: codesurgeon.GptService.SendMessage:output_type -> codesurgeon.SendMessageResponse
	16, // 20: codesurgeon.GptService.ReceiveSlackMessage:output_type -> codesurgeon.ReceiveSlackMessageResponse
	16, // [16:21] is the sub-list for method output_type
	11, // [11:16] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_api_codesurgeon_proto_init() }
func file_api_codesurgeon_proto_init() {
	if File_api_codesurgeon_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_codesurgeon_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*GetChatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_codesurgeon_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*GetChatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_codesurgeon_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*NewChatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_codesurgeon_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*NewChatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_codesurgeon_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*Chat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_codesurgeon_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*ModeState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_codesurgeon_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*SendMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_codesurgeon_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*SendMessageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_codesurgeon_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*Mode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_codesurgeon_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*Command); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_codesurgeon_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_codesurgeon_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*FormMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_codesurgeon_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*QuestionAnswer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_codesurgeon_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*GetOpenAPIRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_codesurgeon_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*GetOpenAPIResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_codesurgeon_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*ReceiveSlackMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_codesurgeon_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*ReceiveSlackMessageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_codesurgeon_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_codesurgeon_proto_goTypes,
		DependencyIndexes: file_api_codesurgeon_proto_depIdxs,
		MessageInfos:      file_api_codesurgeon_proto_msgTypes,
	}.Build()
	File_api_codesurgeon_proto = out.File
	file_api_codesurgeon_proto_rawDesc = nil
	file_api_codesurgeon_proto_goTypes = nil
	file_api_codesurgeon_proto_depIdxs = nil
}
